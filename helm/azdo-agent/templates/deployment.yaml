apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "azdo-agent.fullname" . }}
  labels:
    {{- include "azdo-agent.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "azdo-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "azdo-agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "azdo-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command:
            - /bin/bash
            - '-c'
            - sleep 10000s
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # readinessProbe:
          #   exec:
          #     command:
          #     - /bin/bash
          #     - -c
          #     - if [[ $(/bin/ps -ef | /bin/grep "/azp/bin/Agent.Listener" | /bin/grep -v grep | /usr/bin/wc -l) -ge "1" ]]; then exit 0; else echo "/azp/bin/Agent.Listener not running" && exit 1; fi
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          # livenessProbe:
          #   exec:
          #     command:
          #     - /bin/bash
          #     - -c
          #     - if [[ $(/bin/ps -ef | /bin/grep "/azp/bin/Agent.Listener" | /bin/grep -v grep | /usr/bin/wc -l) -ge "1" ]]; then exit 0; else echo "/azp/bin/Agent.Listener not running" && exit 1; fi
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          # startupProbe:
          #   exec:
          #     command:
          #     - /bin/bash
          #     - -c
          #     - if [[ $(/bin/ps -ef | /bin/grep "/azp/bin/Agent.Listener" | /bin/grep -v grep | /usr/bin/wc -l) -ge "1" ]]; then exit 0; else echo "/azp/bin/Agent.Listener not running" && exit 1; fi
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          envFrom:
            - secretRef:
                name: azdevops
          {{- with .Values.env }}
          env: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: push-secret
              mountPath: /var/run/secrets/openshift.io/push
              readOnly: true
            - name: build-script
              mountPath: /usr/bin/build.sh
              subPath: build.sh
            - name: dockerfile-sample
              mountPath: /tmp/input/Dockerfile
              subPath: Dockerfile
              # experimental for cached image storage from pvc
            - name: containers-storage-overlay
              mountPath: /var/lib/containers/storage
      volumes:
        - name: push-secret
          secret:
            secretName: push-secret
        - name: build-script
          configMap:
            name: build-script
            defaultMode: 0777
        - name: dockerfile-sample
          configMap:
            name: dockerfile-sample
        - name: containers-storage-overlay
          persistentVolumeClaim:
            # Name of the PVC created earlier
            claimName: containers-storage-overlay
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
